/*
 * This file is generated by jOOQ.
 */
package net.tuxanna.database.jooq.information_schema;


import java.time.OffsetDateTime;

import org.jooq.Domain;
import org.jooq.Schema;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.LazySchema;
import org.jooq.impl.SQLDataType;


/**
 * Convenience access to all Domains in INFORMATION_SCHEMA.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Domains {

    /**
     * The domain <code>INFORMATION_SCHEMA.CARDINAL_NUMBER</code>.
     */
    public static final Domain<Long> CARDINAL_NUMBER = Internal.createDomain(
          schema()
        , DSL.name("CARDINAL_NUMBER")
        , SQLDataType.BIGINT
    );

    /**
     * The domain <code>INFORMATION_SCHEMA.CHARACTER_DATA</code>.
     */
    public static final Domain<String> CHARACTER_DATA = Internal.createDomain(
          schema()
        , DSL.name("CHARACTER_DATA")
        , SQLDataType.VARCHAR(65536)
    );

    /**
     * The domain <code>INFORMATION_SCHEMA.NCNAME</code>.
     */
    public static final Domain<String> NCNAME = Internal.createDomain(
          schema()
        , DSL.name("NCNAME")
        , SQLDataType.VARCHAR(4096)
    );

    /**
     * The domain <code>INFORMATION_SCHEMA.SQL_IDENTIFIER</code>.
     */
    public static final Domain<String> SQL_IDENTIFIER = Internal.createDomain(
          schema()
        , DSL.name("SQL_IDENTIFIER")
        , SQLDataType.VARCHAR(128)
    );

    /**
     * The domain <code>INFORMATION_SCHEMA.TIME_STAMP</code>.
     */
    public static final Domain<OffsetDateTime> TIME_STAMP = Internal.createDomain(
          schema()
        , DSL.name("TIME_STAMP")
        , SQLDataType.TIMESTAMPWITHTIMEZONE(6)
    );

    /**
     * The domain <code>INFORMATION_SCHEMA.URI</code>.
     */
    public static final Domain<String> URI = Internal.createDomain(
          schema()
        , DSL.name("URI")
        , SQLDataType.VARCHAR(4096)
    );

    /**
     * The domain <code>INFORMATION_SCHEMA.YES_OR_NO</code>.
     */
    public static final Domain<String> YES_OR_NO = Internal.createDomain(
          schema()
        , DSL.name("YES_OR_NO")
        , SQLDataType.VARCHAR(3)
    );

    private static final Schema schema() {
        return new LazySchema(DSL.name("INFORMATION_SCHEMA"), DSL.comment(""), () -> InformationSchema.INFORMATION_SCHEMA);
    }
}
