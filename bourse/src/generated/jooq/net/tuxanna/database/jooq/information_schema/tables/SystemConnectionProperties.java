/*
 * This file is generated by jOOQ.
 */
package net.tuxanna.database.jooq.information_schema.tables;


import net.tuxanna.database.jooq.information_schema.InformationSchema;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * properties defined for the current connection
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemConnectionProperties extends TableImpl<Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>INFORMATION_SCHEMA.SYSTEM_CONNECTION_PROPERTIES</code>
     */
    public static final SystemConnectionProperties SYSTEM_CONNECTION_PROPERTIES = new SystemConnectionProperties();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column
     * <code>INFORMATION_SCHEMA.SYSTEM_CONNECTION_PROPERTIES.NAME</code>.
     */
    public final TableField<Record, String> NAME = createField(DSL.name("NAME"), net.tuxanna.database.jooq.information_schema.Domains.SQL_IDENTIFIER.getDataType(), this, "");

    /**
     * The column
     * <code>INFORMATION_SCHEMA.SYSTEM_CONNECTION_PROPERTIES.MAX_LEN</code>.
     */
    public final TableField<Record, Integer> MAX_LEN = createField(DSL.name("MAX_LEN"), SQLDataType.INTEGER, this, "");

    /**
     * The column
     * <code>INFORMATION_SCHEMA.SYSTEM_CONNECTION_PROPERTIES.DEFAULT_VALUE</code>.
     */
    public final TableField<Record, String> DEFAULT_VALUE = createField(DSL.name("DEFAULT_VALUE"), net.tuxanna.database.jooq.information_schema.Domains.SQL_IDENTIFIER.getDataType(), this, "");

    /**
     * The column
     * <code>INFORMATION_SCHEMA.SYSTEM_CONNECTION_PROPERTIES.DESCRIPTION</code>.
     */
    public final TableField<Record, String> DESCRIPTION = createField(DSL.name("DESCRIPTION"), net.tuxanna.database.jooq.information_schema.Domains.SQL_IDENTIFIER.getDataType(), this, "");

    private SystemConnectionProperties(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private SystemConnectionProperties(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("properties defined for the current connection"), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>INFORMATION_SCHEMA.SYSTEM_CONNECTION_PROPERTIES</code> table
     * reference
     */
    public SystemConnectionProperties(String alias) {
        this(DSL.name(alias), SYSTEM_CONNECTION_PROPERTIES);
    }

    /**
     * Create an aliased
     * <code>INFORMATION_SCHEMA.SYSTEM_CONNECTION_PROPERTIES</code> table
     * reference
     */
    public SystemConnectionProperties(Name alias) {
        this(alias, SYSTEM_CONNECTION_PROPERTIES);
    }

    /**
     * Create a <code>INFORMATION_SCHEMA.SYSTEM_CONNECTION_PROPERTIES</code>
     * table reference
     */
    public SystemConnectionProperties() {
        this(DSL.name("SYSTEM_CONNECTION_PROPERTIES"), null);
    }

    public <O extends Record> SystemConnectionProperties(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, SYSTEM_CONNECTION_PROPERTIES);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : InformationSchema.INFORMATION_SCHEMA;
    }

    @Override
    public SystemConnectionProperties as(String alias) {
        return new SystemConnectionProperties(DSL.name(alias), this);
    }

    @Override
    public SystemConnectionProperties as(Name alias) {
        return new SystemConnectionProperties(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SystemConnectionProperties rename(String name) {
        return new SystemConnectionProperties(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SystemConnectionProperties rename(Name name) {
        return new SystemConnectionProperties(name, null);
    }
}
