/*
 * This file is generated by jOOQ.
 */
package net.tuxanna.database.jooq.information_schema.tables;


import net.tuxanna.database.jooq.information_schema.InformationSchema;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * one row for each SQL-invoked routine identified as the subject routine of
 * either a &lt;routine invocation&gt;, a &lt;method reference&gt;, a 
 * &lt;method invocation&gt;, or a &lt;static method invocation&gt;  contained
 * in an &lt;assertion definition&gt;, a &lt;domain constraint&gt;, or a
 * &lt;table constraint definition&gt;.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CheckConstraintRoutineUsage extends TableImpl<Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>INFORMATION_SCHEMA.CHECK_CONSTRAINT_ROUTINE_USAGE</code>
     */
    public static final CheckConstraintRoutineUsage CHECK_CONSTRAINT_ROUTINE_USAGE = new CheckConstraintRoutineUsage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column
     * <code>INFORMATION_SCHEMA.CHECK_CONSTRAINT_ROUTINE_USAGE.CONSTRAINT_CATALOG</code>.
     */
    public final TableField<Record, String> CONSTRAINT_CATALOG = createField(DSL.name("CONSTRAINT_CATALOG"), SQLDataType.VARCHAR(128), this, "");

    /**
     * The column
     * <code>INFORMATION_SCHEMA.CHECK_CONSTRAINT_ROUTINE_USAGE.CONSTRAINT_SCHEMA</code>.
     */
    public final TableField<Record, String> CONSTRAINT_SCHEMA = createField(DSL.name("CONSTRAINT_SCHEMA"), SQLDataType.VARCHAR(128), this, "");

    /**
     * The column
     * <code>INFORMATION_SCHEMA.CHECK_CONSTRAINT_ROUTINE_USAGE.CONSTRAINT_NAME</code>.
     */
    public final TableField<Record, String> CONSTRAINT_NAME = createField(DSL.name("CONSTRAINT_NAME"), SQLDataType.VARCHAR(128), this, "");

    /**
     * The column
     * <code>INFORMATION_SCHEMA.CHECK_CONSTRAINT_ROUTINE_USAGE.SPECIFIC_CATALOG</code>.
     */
    public final TableField<Record, String> SPECIFIC_CATALOG = createField(DSL.name("SPECIFIC_CATALOG"), SQLDataType.VARCHAR(128), this, "");

    /**
     * The column
     * <code>INFORMATION_SCHEMA.CHECK_CONSTRAINT_ROUTINE_USAGE.SPECIFIC_SCHEMA</code>.
     */
    public final TableField<Record, String> SPECIFIC_SCHEMA = createField(DSL.name("SPECIFIC_SCHEMA"), SQLDataType.VARCHAR(128), this, "");

    /**
     * The column
     * <code>INFORMATION_SCHEMA.CHECK_CONSTRAINT_ROUTINE_USAGE.SPECIFIC_NAME</code>.
     */
    public final TableField<Record, String> SPECIFIC_NAME = createField(DSL.name("SPECIFIC_NAME"), SQLDataType.VARCHAR(128), this, "");

    private CheckConstraintRoutineUsage(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private CheckConstraintRoutineUsage(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("one row for each SQL-invoked routine identified as the subject routine of either a <routine invocation>, a <method reference>, a  <method invocation>, or a <static method invocation>  contained in an <assertion definition>, a <domain constraint>, or a <table constraint definition>."), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>INFORMATION_SCHEMA.CHECK_CONSTRAINT_ROUTINE_USAGE</code> table
     * reference
     */
    public CheckConstraintRoutineUsage(String alias) {
        this(DSL.name(alias), CHECK_CONSTRAINT_ROUTINE_USAGE);
    }

    /**
     * Create an aliased
     * <code>INFORMATION_SCHEMA.CHECK_CONSTRAINT_ROUTINE_USAGE</code> table
     * reference
     */
    public CheckConstraintRoutineUsage(Name alias) {
        this(alias, CHECK_CONSTRAINT_ROUTINE_USAGE);
    }

    /**
     * Create a <code>INFORMATION_SCHEMA.CHECK_CONSTRAINT_ROUTINE_USAGE</code>
     * table reference
     */
    public CheckConstraintRoutineUsage() {
        this(DSL.name("CHECK_CONSTRAINT_ROUTINE_USAGE"), null);
    }

    public <O extends Record> CheckConstraintRoutineUsage(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, CHECK_CONSTRAINT_ROUTINE_USAGE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : InformationSchema.INFORMATION_SCHEMA;
    }

    @Override
    public CheckConstraintRoutineUsage as(String alias) {
        return new CheckConstraintRoutineUsage(DSL.name(alias), this);
    }

    @Override
    public CheckConstraintRoutineUsage as(Name alias) {
        return new CheckConstraintRoutineUsage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CheckConstraintRoutineUsage rename(String name) {
        return new CheckConstraintRoutineUsage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CheckConstraintRoutineUsage rename(Name name) {
        return new CheckConstraintRoutineUsage(name, null);
    }
}
